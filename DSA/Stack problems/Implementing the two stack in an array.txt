// ** IMPLEMENTING THE TWO STACK IN AN ARRAY
#include<bits/stdc++.h>
using namespace std;
class twostack
{
    private:
    int *arr;
    int size;
    int top1;
    int top2;
    public:
    twostack(int n)
    {
        size=n;
        top1=-1;
        top2=size;
        arr=new int[n];
    }
    void push1(int val)
    {
        if(top1<top2-1)
        {
            top1++;
            arr[top1]=val;
        }
        else
        {
            cout<<"Stack is overflow\n";
            exit(1);
        }
    }
    void push2(int val)
    {
        if(top1<top2-1)
        {
            top2--;
            arr[top2]=val;
        }
        else
        {
            cout<<"Stack is overflow\n";
            exit(1);
        }
    }
    int pop1()
    {
        if(top1>=0)
        {
            int x=arr[top1];
            arr[top1]=0;
            top1--;
            return x;
        }
        else
        {
            cout<<"Stack is underflow\n";
            exit(1);
        }
    }
    int pop2()
    {
        if(top2<size)
        {
            int x=arr[top2];
             arr[top2]=0;
            top2++;
            return x;
        }
        else
        {
            cout<<"Stack is underflow\n";
            exit(1);
        }
    }
    void display()
    {
        cout<<"Displaying your operation\n";
        for(int i=0;i<size;i++)
        {s
            cout<<arr[i]<<endl;
        }
    }

};
int main()
{
    twostack ts(5);
    ts.push1(14);
    ts.push2(34);
    ts.push1(9);
    ts.push1(65);
    ts.push2(43);
    cout<<"popped element is "<<   ts.pop1()<<endl;
    cout<<"popped element is "<<   ts.pop2()<<endl;
    ts.display();

    return 0;
}